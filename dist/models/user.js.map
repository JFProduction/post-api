{"version":3,"sources":["../../server/models/user.js"],"names":["Schema","Promise","global","userSchema","username","type","String","required","minlength","createdAt","Date","default","now","isDeleted","Boolean","User","model"],"mappings":";;;;;;AAAA;;;;;;IAEQA,M,sBAAAA,M;;;AAER,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,IAAME,aAAa,IAAIH,MAAJ,CAAW;AAC1BI,cAAU;AACNC,cAAMC,MADA;AAENC,kBAAU,IAFJ;AAGNC,mBAAW,CAAC,CAAD,EAAI,gDAAJ;AAHL,KADgB;AAM1BC,eAAW,EAAEJ,MAAMK,IAAR,EAAcC,SAASD,KAAKE,GAA5B,EANe;AAO1BC,eAAW,EAAER,MAAMS,OAAR,EAAiBH,SAAS,KAA1B;AAPe,CAAX,CAAnB;;AAUA;;AAEA,IAAMI,OAAO,mBAASC,KAAT,CAAe,MAAf,EAAuBb,UAAvB,CAAb;kBACeY,I","file":"user.js","sourcesContent":["import mongoose from 'mongoose'\n\nconst { Schema } = mongoose\n\nmongoose.Promise = global.Promise\n\nconst userSchema = new Schema({\n    username: {\n        type: String,\n        required: true,\n        minlength: [3, 'Username must be at least 3 characters or more'],\n    },\n    createdAt: { type: Date, default: Date.now },\n    isDeleted: { type: Boolean, default: false },\n})\n\n// Write some encryption here...\n\nconst User = mongoose.model('User', userSchema)\nexport default User"]}